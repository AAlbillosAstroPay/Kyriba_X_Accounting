Option Explicit

' =========================================================================================
' MÓDULO 2: POST-PROCESAMIENTO DE DESCRIPCIONES (v14)
' Propósito: Añade O, H, e I, detalles INBK/EXPT, actualiza Col E y ajusta su ancho.
' =========================================================================================
Sub ActualizarDescripciones()

    Dim wb As Workbook
    Dim ws As Worksheet, wsEntity As Worksheet ' Hoja de lookup
    Dim lastRow As Long, lastRowEntity As Long
    Dim i As Long, k As Long ' Contadores
    
    Dim tipoTxn As String
    Dim origAmount As String
    Dim origCurrency As String
    Dim finalCurrency As String
    Dim descripcionOriginal As String
    Dim textoAnadir As String
    Dim agregarDetalles As Boolean
    
    ' Variables INBK
    Dim inbkPairInfo As Object
    Dim bankPair As Variant
    Dim bankIN As String
    Dim bankOUT As String
    
    ' Variables EXPT
    Dim exptPairInfo As Object
    Dim pairID As String
    Dim direction As String
    Dim bankName As String
    Dim legalEntity As String
    Dim commaPos As Integer
    Dim baseID As String
    Dim suffix As String
    Dim entityPair As Variant
    Dim entity1 As String
    Dim entity2 As String
    
    ' Variables para Lookup Entity
    Dim entityLookup As Object ' Diccionario para lookup
    Dim entityKey As String
    Dim account As String
    Dim lookupValue As String
    
    ' Configuración inicial
    Set wb = ThisWorkbook
    On Error Resume Next
    Set ws = wb.Sheets("Tabla Transformada")
    Set wsEntity = wb.Sheets("Listado Entity")
    On Error GoTo 0
    
    If ws Is Nothing Then
        MsgBox "Error: No se encontró la hoja 'Tabla Transformada'.", vbCritical
        Exit Sub
    End If
    If wsEntity Is Nothing Then
        MsgBox "Error: No se encontró la hoja 'Listado Entity'.", vbCritical
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    lastRowEntity = wsEntity.Cells(wsEntity.Rows.Count, "A").End(xlUp).Row
    
    ' --- FASE 0: Cargar datos de "Listado Entity" para Lookup ---
    Set entityLookup = CreateObject("Scripting.Dictionary")
    If lastRowEntity >= 2 Then
        For k = 2 To lastRowEntity
            legalEntity = Trim(wsEntity.Cells(k, "A").Value)
            account = Trim(wsEntity.Cells(k, "B").Value)
            lookupValue = Trim(wsEntity.Cells(k, "C").Value)
            entityKey = UCase(legalEntity & "|" & account)
            If Len(legalEntity) > 0 And Len(account) > 0 And Not entityLookup.Exists(entityKey) Then
                entityLookup.Add entityKey, lookupValue
            End If
        Next k
    End If
    
    ' --- FASE 1A: Pre-procesar todos los pares INBK ---
    Set inbkPairInfo = CreateObject("Scripting.Dictionary")
    For i = 2 To lastRow
        If Trim(ws.Cells(i, "O").Value) = "INBK" Then
            pairID = Trim(ws.Cells(i, "M").Value)
            If Len(pairID) > 0 Then
                direction = Trim(ws.Cells(i, "K").Value)
                bankName = Trim(ws.Cells(i, "P").Value)
                If Not inbkPairInfo.Exists(pairID) Then inbkPairInfo.Add pairID, Array("", "")
                bankPair = inbkPairInfo(pairID)
                If direction = "IN" Then
                    bankPair(0) = bankName
                ElseIf direction = "OUT" Then
                    bankPair(1) = bankName
                End If
                inbkPairInfo(pairID) = bankPair
            End If
        End If
    Next i
    
    ' --- FASE 1B: Pre-procesar todos los pares EXPT ---
    Set exptPairInfo = CreateObject("Scripting.Dictionary")
    For i = 2 To lastRow
        If Trim(ws.Cells(i, "O").Value) = "EXPT" Then
            pairID = Trim(ws.Cells(i, "M").Value)
            commaPos = InStrRev(pairID, ",")
            If commaPos > 0 Then
                baseID = Left(pairID, commaPos - 1)
                suffix = Mid(pairID, commaPos)
                legalEntity = Trim(ws.Cells(i, "N").Value)
                If Not exptPairInfo.Exists(baseID) Then exptPairInfo.Add baseID, Array("", "")
                entityPair = exptPairInfo(baseID)
                If suffix = ",1" And Len(entityPair(0)) = 0 Then entityPair(0) = legalEntity
                If suffix = ",2" And Len(entityPair(1)) = 0 Then entityPair(1) = legalEntity
                exptPairInfo(baseID) = entityPair
            End If
        End If
    Next i
    
    ' --- FASE 2: Construir descripciones y actualizar Col E ---
    For i = 2 To lastRow
        tipoTxn = Trim(ws.Cells(i, "O").Value)
        origAmount = Trim(ws.Cells(i, "H").Text)
        origCurrency = Trim(ws.Cells(i, "I").Value)
        finalCurrency = Trim(ws.Cells(i, "G").Value)
        descripcionOriginal = Trim(ws.Cells(i, "F").Value)
        legalEntity = Trim(ws.Cells(i, "N").Value)
        account = Trim(ws.Cells(i, "C").Value)
        
        textoAnadir = ""
        Dim specificTransferText As String: specificTransferText = ""
        agregarDetalles = True
        
        ' --- Lógica de Excepciones (O, H, I) ---
        If finalCurrency = "USD" Then
            If origCurrency = "USD" Or origCurrency = "USDC" Or origCurrency = "USC" Or origCurrency = "UST" Or origCurrency = "USDT" Then
                agregarDetalles = False
            End If
        End If
        If finalCurrency = "EUR" And origCurrency = "EUR" Then
            agregarDetalles = False
        End If
        
        ' 1. Añadir Columna O
        If Len(tipoTxn) > 0 Then textoAnadir = tipoTxn
        
        ' 2. Añadir Columnas H e I
        If agregarDetalles Then
            If Len(origAmount) > 0 Then
                If Len(textoAnadir) > 0 Then textoAnadir = textoAnadir & " " & origAmount Else textoAnadir = origAmount
            End If
            If Len(origCurrency) > 0 Then
                If Len(textoAnadir) > 0 Then textoAnadir = textoAnadir & " " & origCurrency Else textoAnadir = origCurrency
            End If
        End If
        
        ' 3. Añadir detalles de transferencia
        If tipoTxn = "INBK" Then
            pairID = Trim(ws.Cells(i, "M").Value)
            If Len(pairID) > 0 And inbkPairInfo.Exists(pairID) Then
                bankPair = inbkPairInfo(pairID)
                bankIN = CStr(bankPair(0)): bankOUT = CStr(bankPair(1))
                If Len(bankIN) > 0 And Len(bankOUT) > 0 Then
                    If bankIN = bankOUT Then specificTransferText = "Transfer between " & bankIN & " accounts - " Else specificTransferText = "Transfer from " & bankOUT & " to " & bankIN & " - "
                Else
                    specificTransferText = "[BANK] - "
                End If
            Else
                specificTransferText = "[BANK] - "
            End If
        ElseIf tipoTxn = "EXPT" Then
            pairID = Trim(ws.Cells(i, "M").Value)
            commaPos = InStrRev(pairID, ",")
            If commaPos > 0 Then
                baseID = Left(pairID, commaPos - 1)
                If exptPairInfo.Exists(baseID) Then
                    entityPair = exptPairInfo(baseID)
                    entity1 = CStr(entityPair(0)): entity2 = CStr(entityPair(1))
                    If Len(entity1) > 0 And Len(entity2) > 0 Then specificTransferText = "Transfer between " & entity1 & " and " & entity2 & " - " Else specificTransferText = "[ENTITY] - "
                Else
                    specificTransferText = "[ENTITY] - "
                End If
            End If
        End If
        
        ' 4. Combinar textos para Col F
        Dim combinedText As String: combinedText = ""
        If Len(textoAnadir) > 0 Then combinedText = textoAnadir
        If Len(specificTransferText) > 0 Then
            If Len(combinedText) > 0 Then combinedText = combinedText & " " & specificTransferText Else combinedText = specificTransferText
        End If
        
        ' 5. Escribir en Col F
        If Len(combinedText) > 0 Then
            If Len(descripcionOriginal) > 0 Then ws.Cells(i, "F").Value = combinedText & " " & descripcionOriginal Else ws.Cells(i, "F").Value = combinedText
        End If
        
        ' 6. Actualizar Columna E desde "Listado Entity"
        If Len(legalEntity) > 0 And Len(account) > 0 Then
            entityKey = UCase(legalEntity & "|" & account)
            If entityLookup.Exists(entityKey) Then
                ws.Cells(i, "E").Value = entityLookup(entityKey)
            End If
        End If
        
    Next i
    
    ' --- PASO FINAL: Ajustar ancho de Columna E ---
    ws.Columns("E").AutoFit
    ' --- FIN PASO FINAL ---
    
    ' Limpiar diccionarios
    Set inbkPairInfo = Nothing
    Set exptPairInfo = Nothing
    Set entityLookup = Nothing
    
    Application.ScreenUpdating = True
    
    MsgBox "Proceso de actualización de descripciones y entidad completado.", vbInformation

End Sub
